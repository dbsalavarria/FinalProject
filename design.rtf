{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Low Pass Filter (with Sndfile)
\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 This code is a Low Pass Filter that runs using \'91sndfile.h\'92\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 The design was based off Akito van Troyer\'92s code \'91LowPass.c\'92, which was originally using a library called \'91wave.h\'92 to manage the audio files.\
\
How it works:\
\
It opens up a file with 
\f1\i sf_open
\f0\i0  in read mode.\
It checks if the file exists.\
If it exists, it creates a LPF with 
\f2\b LowPassFilter()
\f0\b0 \
After that, it applies the filtering using a series of for loops\
Then, it writes the new processed file with 
\f1\i sf_open
\f0\i0  in write mode.\
Again, checks if the file exists.\
Finally, it closes the files\
\
A separate function was used for creating the Low Pass Filter\
\
I wanted to keep the main function as simple as possible. Maybe I could write a function that encapsulates the for loops to make the main function even more readable.}